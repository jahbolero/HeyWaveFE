#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_BidParent.headers.fc";
#include "tact_BidParent.stdlib.fc";
#include "tact_BidParent.storage.fc";

;;
;; Contract BidParent functions
;;

(slice, int) $BidParent$_contract_init() impure inline_ref {
    var (($self'owner, $self'numBids)) = (null(), 0);
    $self'owner = __tact_context_get_sender();
    return ($self'owner, $self'numBids);
}

((slice, int), int) $BidParent$_fun_numBids((slice, int) $self) impure inline_ref {
    var (($self'owner, $self'numBids)) = $self;
    var $fresh$ret_0 = $self'numBids;
    return (($self'owner, $self'numBids), $fresh$ret_0);
}

((slice, int), slice) $BidParent$_fun_bidAddress((slice, int) $self, int $seqno) impure inline_ref {
    var (($self'owner, $self'numBids)) = $self;
    var $fresh$ret_1 = $global_contractAddress($BidChild$_init_child(__tact_context_sys, $global_myAddress(), $seqno));
    return (($self'owner, $self'numBids), $fresh$ret_1);
}

((slice, int), ()) $BidParent$_fun_requireOwner((slice, int) $self) impure inline_ref {
    var (($self'owner, $self'numBids)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'owner, $self'numBids), ());
}

((slice, int), slice) $BidParent$_fun_owner((slice, int) $self) impure inline_ref {
    var (($self'owner, $self'numBids)) = $self;
    var $fresh$ret_2 = $self'owner;
    return (($self'owner, $self'numBids), $fresh$ret_2);
}

;;
;; Receivers of a Contract BidParent
;;

(((slice, int)), ()) $BidParent$_internal_binary_NewBid((slice, int) $self, (slice) $msg) impure inline {
    var ($self'owner, $self'numBids) = $self;
    var ($msg'task) = $msg;
    $self'numBids = ($self'numBids + 1);
    var ($init'code, $init'data) = $BidChild$_init_child(__tact_context_sys, $global_myAddress(), $self'numBids);
    $global_send($SendParameters$_constructor_to_body_value_mode_code_data($global_contractAddress(($init'code, $init'data)), $InternalSetTask$_store_cell($InternalSetTask$_constructor_task($msg'task)), 20000000, 2, $init'code, $init'data));
    ($self'owner, $self'numBids)~$BidParent$_fun_reply($NewBidResponse$_store_cell($NewBidResponse$_constructor_seqno($self'numBids)));
    return (($self'owner, $self'numBids), ());
}

(((slice, int)), ()) $BidParent$_internal_binary_CompleteBid((slice, int) $self, (int) $msg) impure inline {
    var ($self'owner, $self'numBids) = $self;
    var ($msg'seqno) = $msg;
    ($self'owner, $self'numBids)~$BidParent$_fun_requireOwner();
    throw_unless(29259, ($msg'seqno <= $self'numBids));
    $global_send($SendParameters$_constructor_to_body_value_mode($global_contractAddress($BidChild$_init_child(__tact_context_sys, $global_myAddress(), $msg'seqno)), $InternalComplete$_store_cell($InternalComplete$_constructor_excess(__tact_context_get_sender())), 0, 66));
    return (($self'owner, $self'numBids), ());
}

(((slice, int)), ()) $BidParent$_internal_binary_Deploy((slice, int) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'numBids) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner, $self'numBids)~$BidParent$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner, $self'numBids), ());
}

;;
;; Get methods of a Contract BidParent
;;

_ %numBids() method_id(110781) {
    var self = $BidParent$_contract_load();
    var res = self~$BidParent$_fun_numBids();
    return res;
}

_ %bidAddress(int $seqno) method_id(85287) {
    int $seqno = $seqno;
    var self = $BidParent$_contract_load();
    var res = self~$BidParent$_fun_bidAddress($seqno);
    return res;
}

_ %owner() method_id(83229) {
    var self = $BidParent$_contract_load();
    var res = self~$BidParent$_fun_owner();
    return res;
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract BidParent
;;

((slice, int), int) $BidParent$_contract_router_internal((slice, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive NewBid message
    if (op == 2510749587) {
        var msg = in_msg~$NewBid$_load();
        self~$BidParent$_internal_binary_NewBid(msg);
        return (self, true);
    }
    
    ;; Receive CompleteBid message
    if (op == 3415920434) {
        var msg = in_msg~$CompleteBid$_load();
        self~$BidParent$_internal_binary_CompleteBid(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$BidParent$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $BidParent$_contract_load();
    
    ;; Handle operation
    int handled = self~$BidParent$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $BidParent$_contract_store(self);
}
